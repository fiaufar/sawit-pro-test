// Code generated by MockGen. DO NOT EDIT.
// Source: repository/user_credential_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	entity "github.com/fiaufar/sawit-pro-test/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockUserCredentialRepositoryInterface is a mock of UserCredentialRepositoryInterface interface.
type MockUserCredentialRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserCredentialRepositoryInterfaceMockRecorder
}

// MockUserCredentialRepositoryInterfaceMockRecorder is the mock recorder for MockUserCredentialRepositoryInterface.
type MockUserCredentialRepositoryInterfaceMockRecorder struct {
	mock *MockUserCredentialRepositoryInterface
}

// NewMockUserCredentialRepositoryInterface creates a new mock instance.
func NewMockUserCredentialRepositoryInterface(ctrl *gomock.Controller) *MockUserCredentialRepositoryInterface {
	mock := &MockUserCredentialRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockUserCredentialRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserCredentialRepositoryInterface) EXPECT() *MockUserCredentialRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserCredentialRepositoryInterface) Create(userCr *entity.UserCredential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", userCr)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserCredentialRepositoryInterfaceMockRecorder) Create(userCr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserCredentialRepositoryInterface)(nil).Create), userCr)
}

// GetByUserId mocks base method.
func (m *MockUserCredentialRepositoryInterface) GetByUserId(userId int64) (*entity.UserCredential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserId", userId)
	ret0, _ := ret[0].(*entity.UserCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserId indicates an expected call of GetByUserId.
func (mr *MockUserCredentialRepositoryInterfaceMockRecorder) GetByUserId(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserId", reflect.TypeOf((*MockUserCredentialRepositoryInterface)(nil).GetByUserId), userId)
}
